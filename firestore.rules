rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents { 
        function isAdmin() {
            return isAuthenticated() && 'admin' in request.auth.token
            && request.auth.token.admin == true;
        }
        function isAuthenticated() {
            return request.auth.uid != null;
        }
        function isKnowUser() {
            return isAuthenticated() &&
                exists(/databases/$(database)/documents/users/$(request.auth.uid));
        }
        function isNonEmptyString(fieldName) {
            return request.resource.data[fieldName] is string && 
            request.resource.data[fieldName].size() > 0; 
        }
        function isValidCourse() {
            return request.resource.data.seqNo is number && 
            request.resource.data.seqNo >= 0 &&             
            isNonEmptyString('url');
        }
        match /courses/{courseId} {        
            // allow get;
            // allow list;
            allow read: if isKnowUser();
            // allow write: if false;
            // allow create: if false;
            // allow update: if false;
            // allow delete: if false;
            allow create, update: if isValidCourse() && isAdmin();
            allow delete: if isAdmin();
            match /lessons/{lessonId} {        
                allow read: if isKnowUser();
            }
        }
        match /{path=**}/lessons/{lessonId} {
            allow read: if isKnowUser();
        }
        // match /courses/{courseId} {
        //     allow list: if false;
        // }
    }
    // match /databases/{database}/documents/courses/{courseId}/lessons/{lessonId} {        
    //     allow read;
    // }
}